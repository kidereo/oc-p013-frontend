openapi: 3.0.3

info:
  title: Bank Argent API documentation
  version: 1.1.0
  description: Transaction Module of the Bank Arget API documentation. This deliverable is part of the Project 013 - Utilisez une API pour un compte utilisateur bancaire avec React of the DÃ©veloppeur d'application - JavaScript React path with OpenClassrooms.
  contact:
    name: kidereo
    url: https://github.com/kidereo/oc-p013-fronten

servers:
  - url: http://localhost:3001/api/v1
    description: Backend server

paths:
  /accounts/{accountId}/transactions:
    get:
      description: Obtain a list of transactions on a specific account.
      summary: List transactions.
      tags:
        - Transaction Module
      security:
        - authToken: []
      parameters:
        - $ref: "#/components/parameters/authorisation"
        - $ref: "#/components/parameters/accountId"
        - name: bodyLimit
          in: query
          description: Number of transactions returned.
          schema:
            type: integer
            minimum: 5
            maximum: 50
            example: 36
      responses:
        200:
          description: Transactions retrieved sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        401:
          description: Unauthorized.
        404:
          description: Not Found.
        500:
          description: Internal Server Error.
        503:
          description: Service Unavailable.

    post:
      description: Add a new transaction to a specific account.
      summary: Add a new transaction.
      tags:
        - Transaction Module
      security:
        - authToken: []
      parameters:
        - $ref: "#/components/parameters/authorisation"
        - $ref: "#/components/parameters/accountId"
      requestBody:
        description: Add a transaction.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        200:
          description: Transaction added sucessfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        401:
          description: Unauthorized.
        403:
          description: Forbidden.
        404:
          description: Not Found.
        500:
          description: Internal Server Error.
        503:
          description: Service Unavailable.

  /accounts/{accountId}transactions/{transactionId}:
    get:
      description: Obtain details of an individual transaction on a specific account.
      summary: Retrieve transaction details.
      tags:
        - Transaction Module
      security:
        - authToken: []
      parameters:
        - $ref: "#/components/parameters/authorisation"
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/transactionId"
      responses:
        200:
          description: Transactions retrieved sucessfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
            application/xml:
              schema:
                $ref: "#/components/schemas/Transaction"
        401:
          description: Unauthorized.
        404:
          description: Not Found.
        500:
          description: Internal Server Error.
        503:
          description: Service Unavailable.

    put:
      description: Modify a category and/or notes of the transaction.
      summary: Modify transaction details.
      tags:
        - Transaction Module
      security:
        - authToken: []
      parameters:
        - $ref: "#/components/parameters/authorisation"
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/transactionId"
      requestBody:
        description: Modify category and/or notes.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestBody"
      responses:
        200:
          description: Transaction details modified sucessfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        401:
          description: Unauthorized.
        403:
          description: Forbidden.
        404:
          description: Not Found.
        500:
          description: Internal Server Error.
        503:
          description: Service Unavailable.

    delete:
      description: Delete a transaction from a certain account.
      summary: Delete a transaction.
      tags:
        - Transaction Module
      security:
        - authToken: []
      parameters:
        - $ref: "#/components/parameters/authorisation"
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/transactionId"
      responses:
        200:
          description: Transaction deleted sucessfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        401:
          description: Unauthorized.
        403:
          description: Forbidden.
        404:
          description: Not Found.
        500:
          description: Internal Server Error.
        503:
          description: Service Unavailable.

components:
  securitySchemes:
    authToken:
      type: apiKey
      in: header
      name: authorisation

  parameters:
    authorisation:
      name: authorisation
      required: true
      in: header
      description: JWT token.
      schema:
        type: string
        scheme: bearer
        bearerFormat: JWT
    accountId:
      name: accountId
      in: path
      description: Account ID to which the retrieved transactions belong.
      required: true
      schema:
        type: integer
        example: 2
    transactionId:
      name: transactionId
      in: path
      description: Transaction ID for which detailes are retrieved.
      required: true
      schema:
        type: integer
        example: 40

  schemas:
    ApiResponse:
      description: Model containing API response.
      type: object
      properties:
        status:
          type: integer
          example: 0
        message:
          type: string
          example: Operation successful.
        body:
          type: object
          properties:
            id:
              type: string
              example: 636bf01cdb04cc40b29ec821
            email:
              type: string
              example: james@univex.co.uk
    RequestBody:
      description: Model containing request body.
      type: object
      properties:
        category:
          type: string
        notes:
          type: string
    Transaction:
      description: Model containing transaction details.
      type: object
      properties:
        transaction_id:
          type: integer
          example: 506
        transaction_date:
          type: string
          example: June 20th, 2020
        transaction_description:
          type: string
          example: Golden Sun Bakery
        transaction_amount:
          type: number
          example: 500
        account_balance:
          type: number
          example: 2087.79
        transaction_type:
          type: string
          example: Electronic
        transaction_category:
          type: string
          example: Food
        transaction_notes:
          type: string
          example: Danish pastries
    Transactions:
      description: Array of transaction details.
      type: array
      items:
        $ref: "#/components/schemas/Transaction"
